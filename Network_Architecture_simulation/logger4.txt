the message seding to neighbor is {2: ['X'], 6: ['X']}['X']
the final message to buffer is ['R', '4', '2', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {2: ['X'], 6: ['X']}['X']
the final message to buffer is ['R', '4', '6', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {2: ['X'], 6: ['X']}['X']
the final message to buffer is ['R', '4', '2', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {2: ['X'], 6: ['X']}['X']
the final message to buffer is ['R', '4', '6', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 5: [6], 6: ['X'], 7: [6]}[2]
Checking the if condition ['2']TrueFalse


Skipping the route path through the same node :['2']2

the message seding to neighbor is {1: [2], 2: ['X'], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '2', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse

the final message to buffer is ['R', '4', '6', '5', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '6', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse

the final message to buffer is ['R', '4', '6', '7', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 5: [6], 6: ['X'], 7: [6]}[2]
Checking the if condition ['2']TrueFalse

the final message to buffer is ['R', '4', '2', '1', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '2', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse


Skipping the route path through the same node :['6']6

the message seding to neighbor is {1: [2], 2: ['X'], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '6', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse


Skipping the route path through the same node :['6']6

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2]
Checking the if condition ['2']TrueFalse


Skipping the route path through the same node :['2']2

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '2', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2, 1]
Checking the if condition ['2', '1']TrueFalse


Skipping the route path through the same node :['2', '1']2

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse

the final message to buffer is ['R', '4', '6', '5', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '6', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse

the final message to buffer is ['R', '4', '6', '7', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2]
Checking the if condition ['2']TrueFalse

the final message to buffer is ['R', '4', '2', '1', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '2', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2, 1]
Checking the if condition ['2', '1']TrueFalse

the final message to buffer is ['R', '4', '2', '1', '3', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse


Skipping the route path through the same node :['6']6

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '6', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse


Skipping the route path through the same node :['6']6

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2]
Checking the if condition ['2']TrueFalse


Skipping the route path through the same node :['2']2

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '2', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2, 1]
Checking the if condition ['2', '1']TrueFalse


Skipping the route path through the same node :['2', '1']2

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse

the final message to buffer is ['R', '4', '6', '5', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '6', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse

the final message to buffer is ['R', '4', '6', '7', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2]
Checking the if condition ['2']TrueFalse

the final message to buffer is ['R', '4', '2', '1', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '2', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2, 1]
Checking the if condition ['2', '1']TrueFalse

the final message to buffer is ['R', '4', '2', '1', '3', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse


Skipping the route path through the same node :['6']6

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '6', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse


Skipping the route path through the same node :['6']6

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2]
Checking the if condition ['2']TrueFalse


Skipping the route path through the same node :['2']2

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '2', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2, 1]
Checking the if condition ['2', '1']TrueFalse


Skipping the route path through the same node :['2', '1']2

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse

the final message to buffer is ['R', '4', '6', '5', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '6', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse

the final message to buffer is ['R', '4', '6', '7', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2]
Checking the if condition ['2']TrueFalse

the final message to buffer is ['R', '4', '2', '1', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '2', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2, 1]
Checking the if condition ['2', '1']TrueFalse

the final message to buffer is ['R', '4', '2', '1', '3', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse


Skipping the route path through the same node :['6']6

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '6', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse


Skipping the route path through the same node :['6']6

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2]
Checking the if condition ['2']TrueFalse


Skipping the route path through the same node :['2']2

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '2', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2, 1]
Checking the if condition ['2', '1']TrueFalse


Skipping the route path through the same node :['2', '1']2

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse

the final message to buffer is ['R', '4', '6', '5', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '6', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse

the final message to buffer is ['R', '4', '6', '7', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2]
Checking the if condition ['2']TrueFalse

the final message to buffer is ['R', '4', '2', '1', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '2', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2, 1]
Checking the if condition ['2', '1']TrueFalse

the final message to buffer is ['R', '4', '2', '1', '3', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse


Skipping the route path through the same node :['6']6

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '6', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse


Skipping the route path through the same node :['6']6

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2]
Checking the if condition ['2']TrueFalse


Skipping the route path through the same node :['2']2

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '2', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2, 1]
Checking the if condition ['2', '1']TrueFalse


Skipping the route path through the same node :['2', '1']2

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse

the final message to buffer is ['R', '4', '6', '5', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '6', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse

the final message to buffer is ['R', '4', '6', '7', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2]
Checking the if condition ['2']TrueFalse

the final message to buffer is ['R', '4', '2', '1', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '2', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2, 1]
Checking the if condition ['2', '1']TrueFalse

the final message to buffer is ['R', '4', '2', '1', '3', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse


Skipping the route path through the same node :['6']6

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '6', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse


Skipping the route path through the same node :['6']6

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2]
Checking the if condition ['2']TrueFalse


Skipping the route path through the same node :['2']2

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '2', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2, 1]
Checking the if condition ['2', '1']TrueFalse


Skipping the route path through the same node :['2', '1']2

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse

the final message to buffer is ['R', '4', '6', '5', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '6', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse

the final message to buffer is ['R', '4', '6', '7', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2]
Checking the if condition ['2']TrueFalse

the final message to buffer is ['R', '4', '2', '1', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '2', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2, 1]
Checking the if condition ['2', '1']TrueFalse

the final message to buffer is ['R', '4', '2', '1', '3', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse


Skipping the route path through the same node :['6']6

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '6', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse


Skipping the route path through the same node :['6']6

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2]
Checking the if condition ['2']TrueFalse


Skipping the route path through the same node :['2']2

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '2', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2, 1]
Checking the if condition ['2', '1']TrueFalse


Skipping the route path through the same node :['2', '1']2

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse

the final message to buffer is ['R', '4', '6', '5', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '6', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse

the final message to buffer is ['R', '4', '6', '7', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2]
Checking the if condition ['2']TrueFalse

the final message to buffer is ['R', '4', '2', '1', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '2', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2, 1]
Checking the if condition ['2', '1']TrueFalse

the final message to buffer is ['R', '4', '2', '1', '3', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse


Skipping the route path through the same node :['6']6

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '6', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse


Skipping the route path through the same node :['6']6

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2]
Checking the if condition ['2']TrueFalse


Skipping the route path through the same node :['2']2

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '2', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2, 1]
Checking the if condition ['2', '1']TrueFalse


Skipping the route path through the same node :['2', '1']2

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse

the final message to buffer is ['R', '4', '6', '5', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '6', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse

the final message to buffer is ['R', '4', '6', '7', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2]
Checking the if condition ['2']TrueFalse

the final message to buffer is ['R', '4', '2', '1', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '2', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2, 1]
Checking the if condition ['2', '1']TrueFalse

the final message to buffer is ['R', '4', '2', '1', '3', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse


Skipping the route path through the same node :['6']6

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '6', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse


Skipping the route path through the same node :['6']6

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2]
Checking the if condition ['2']TrueFalse


Skipping the route path through the same node :['2']2

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '2', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2, 1]
Checking the if condition ['2', '1']TrueFalse


Skipping the route path through the same node :['2', '1']2

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse

the final message to buffer is ['R', '4', '6', '5', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '6', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse

the final message to buffer is ['R', '4', '6', '7', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2]
Checking the if condition ['2']TrueFalse

the final message to buffer is ['R', '4', '2', '1', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '2', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2, 1]
Checking the if condition ['2', '1']TrueFalse

the final message to buffer is ['R', '4', '2', '1', '3', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse


Skipping the route path through the same node :['6']6

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '6', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse


Skipping the route path through the same node :['6']6

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2]
Checking the if condition ['2']TrueFalse


Skipping the route path through the same node :['2']2

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '2', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2, 1]
Checking the if condition ['2', '1']TrueFalse


Skipping the route path through the same node :['2', '1']2

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse

the final message to buffer is ['R', '4', '6', '5', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '6', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse

the final message to buffer is ['R', '4', '6', '7', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2]
Checking the if condition ['2']TrueFalse

the final message to buffer is ['R', '4', '2', '1', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '2', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2, 1]
Checking the if condition ['2', '1']TrueFalse

the final message to buffer is ['R', '4', '2', '1', '3', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse


Skipping the route path through the same node :['6']6

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '6', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse


Skipping the route path through the same node :['6']6

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2]
Checking the if condition ['2']TrueFalse


Skipping the route path through the same node :['2']2

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '2', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2, 1]
Checking the if condition ['2', '1']TrueFalse


Skipping the route path through the same node :['2', '1']2

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse

the final message to buffer is ['R', '4', '6', '5', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '6', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse

the final message to buffer is ['R', '4', '6', '7', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2]
Checking the if condition ['2']TrueFalse

the final message to buffer is ['R', '4', '2', '1', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '2', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2, 1]
Checking the if condition ['2', '1']TrueFalse

the final message to buffer is ['R', '4', '2', '1', '3', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse


Skipping the route path through the same node :['6']6

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '6', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse


Skipping the route path through the same node :['6']6

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2]
Checking the if condition ['2']TrueFalse


Skipping the route path through the same node :['2']2

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '2', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2, 1]
Checking the if condition ['2', '1']TrueFalse


Skipping the route path through the same node :['2', '1']2

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse

the final message to buffer is ['R', '4', '6', '5', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '6', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse

the final message to buffer is ['R', '4', '6', '7', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2]
Checking the if condition ['2']TrueFalse

the final message to buffer is ['R', '4', '2', '1', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '2', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2, 1]
Checking the if condition ['2', '1']TrueFalse

the final message to buffer is ['R', '4', '2', '1', '3', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse


Skipping the route path through the same node :['6']6

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '6', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse


Skipping the route path through the same node :['6']6

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2]
Checking the if condition ['2']TrueFalse


Skipping the route path through the same node :['2']2

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '2', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2, 1]
Checking the if condition ['2', '1']TrueFalse


Skipping the route path through the same node :['2', '1']2

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse

the final message to buffer is ['R', '4', '6', '5', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '6', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse

the final message to buffer is ['R', '4', '6', '7', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2]
Checking the if condition ['2']TrueFalse

the final message to buffer is ['R', '4', '2', '1', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '2', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2, 1]
Checking the if condition ['2', '1']TrueFalse

the final message to buffer is ['R', '4', '2', '1', '3', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse


Skipping the route path through the same node :['6']6

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '6', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse


Skipping the route path through the same node :['6']6

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2]
Checking the if condition ['2']TrueFalse


Skipping the route path through the same node :['2']2

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '2', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2, 1]
Checking the if condition ['2', '1']TrueFalse


Skipping the route path through the same node :['2', '1']2

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse

the final message to buffer is ['R', '4', '6', '5', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '6', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse

the final message to buffer is ['R', '4', '6', '7', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 2]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2]
Checking the if condition ['2']TrueFalse

the final message to buffer is ['R', '4', '2', '1', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '2', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[2, 1]
Checking the if condition ['2', '1']TrueFalse

the final message to buffer is ['R', '4', '2', '1', '3', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse


Skipping the route path through the same node :['6']6

the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}['X']
the final message to buffer is ['R', '4', '6', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 6]
the message seding to neighbor is {1: [2], 2: ['X'], 3: [2, 1], 5: [6], 6: ['X'], 7: [6]}[6]
Checking the if condition ['6']TrueFalse


Skipping the route path through the same node :['6']6




[]
